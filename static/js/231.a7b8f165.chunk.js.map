{"version":3,"file":"static/js/231.a7b8f165.chunk.js","mappings":"0LACA,EAA4B,yBAA5B,EAA2D,mBAA3D,EAAqF,oB,SCGtE,SAASA,IACtB,IAAAC,GAAwBC,EAAAA,EAAAA,WAAS,kBAAM,IAAIC,IAAM,IAACC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3CK,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAaC,EAAAA,EAAAA,QAAO,OAE1BC,EAAAA,EAAAA,YAAU,WAMR,OALAF,EAAWG,QAAUC,aAAY,WAE/BL,EAAQ,IAAIJ,KACd,GAAG,KAEI,WAELU,GACF,CACF,GAAG,IAEH,IAAMA,EAAO,WACXC,cAAcN,EAAWG,QAC3B,EAEA,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAWG,EAAcF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAWG,EAASF,SAAA,CAAC,SAAOX,EAAKc,yBACtCL,EAAAA,EAAAA,KAAA,UAAQC,UAAWG,EAASE,KAAK,SAASC,QAAST,EAAKI,SAAC,uBAK/D,C","sources":["webpack://react-training/./src/components/Clock/Clock.module.css?0272","components/Clock/Clock.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Clock_container__x-xKO\",\"btn\":\"Clock_btn__P8ywM\",\"face\":\"Clock_face__n9GBk\"};","// import React, { Component } from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport css from './Clock.module.css';\n\nexport default function Clock() {\n  const [time, setTime] = useState(() => new Date());\n  const intervalId = useRef(null);\n\n  useEffect(() => {\n    intervalId.current = setInterval(() => {\n      // console.log('Цей інтервал кожні 2000ms', Date.now());\n      setTime(new Date());\n    }, 2000);\n\n    return () => {\n      // console.log('This is reset');\n      stop();\n    };\n  }, []);\n\n  const stop = () => {\n    clearInterval(intervalId.current);\n  };\n\n  return (\n    <div className='container'>\n    <div className={css.container}>\n      <div className={css.face}>Time: {time.toLocaleTimeString()}</div>\n      <button className={css.btn} type=\"button\" onClick={stop}>\n        Stop the Clock\n      </button>\n    </div></div>\n  );\n}\n\n// class OldClock extends Component {\n//   state = {\n//     time: new Date().toLocaleTimeString(),\n//   };\n\n//   intervalId = null;\n\n//   componentDidMount() {\n//     console.log('setIntervalId');\n\n//     this.intervalId = setInterval(\n//       () => this.setState({ time: new Date().toLocaleTimeString() }),\n//       1000\n//     );\n//   }\n\n//   componentWillUnmount() {\n//     console.log('Цей метод викликається перед розмонтуванням компоненту');\n//     this.stop();\n//   }\n//   stop = () => {\n//     clearInterval(this.intervalId);\n//   };\n\n//   render() {\n//     return (\n//       <div className={css.container}>\n//         <div className={css.face}>Time: {this.state.time}</div>\n//         <button type=\"button\" onClick={this.stop}></button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Clock;\n"],"names":["Clock","_useState","useState","Date","_useState2","_slicedToArray","time","setTime","intervalId","useRef","useEffect","current","setInterval","stop","clearInterval","_jsx","className","children","_jsxs","css","toLocaleTimeString","type","onClick"],"sourceRoot":""}