{"version":3,"file":"static/js/195.c50cad30.chunk.js","mappings":"gLACA,EAA4B,iCAA5B,EAAmE,2BAAnE,EAAsG,6BCAtG,EAAuB,mBAAvB,EAAkD,oBAAlD,EAA4E,kB,SC+B5E,EA3Ba,WACX,IAAQA,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAA3CH,KAEFI,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAPa,SAAAC,GACnBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAOC,SAASZ,KAA5BU,MACRN,EAAS,CAAES,KAAM,UAAWC,QAASC,OAAOL,IAC9C,EAGgCM,UAAWC,EAAUC,KAAK,SAAQC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SACEJ,UAAWC,EACXJ,KAAK,SACLQ,KAAK,OACLC,YAAY,OACZC,aAAcvB,KAEhBoB,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAASJ,KAAK,SAAQM,SAAC,eAKhD,EC4DA,EAlFsB,WAEpB,IAAAK,GAAwBvB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAAlDsB,EAAKD,EAALC,MAAOzB,EAAIwB,EAAJxB,KAETI,GAAWC,EAAAA,EAAAA,MASjB,OACEC,EAAAA,EAAAA,MAAA,OAAKU,UAAWC,EAAcE,SAAA,EAC5BC,EAAAA,EAAAA,KAACM,EAAI,KACLN,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAUE,SAAEM,KAC1BL,EAAAA,EAAAA,KAAA,UACEJ,UAAWC,EACXJ,KAAK,SACLc,QAd0B,WAC9BvB,ECfqB,SAAAJ,GAAI,MAAK,CAChCa,KAAM,YACNC,QAASd,EACV,CDYY4B,CAAU5B,GACrB,EAYuCmB,SAClC,cAGDC,EAAAA,EAAAA,KAAA,UACEJ,UAAWC,EACXJ,KAAK,SACLc,QAlB0B,WAC9BvB,ECbqB,SAAAJ,GAAI,MAAK,CAChCa,KAAM,YACNC,QAASd,EACV,CDUY6B,CAAU7B,GACrB,EAgBuCmB,SAClC,eAKP,C","sources":["webpack://react-training/./src/components/CounterSecond/CounterSecond.module.css?b0c7","webpack://react-training/./src/components/Step/Step.module.css?1f73","components/Step/Step.js","components/CounterSecond/CounterSecond.jsx","store/action.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CounterSecond_container__usxni\",\"btn\":\"CounterSecond_btn__PNWiL\",\"count\":\"CounterSecond_count__H2Wgp\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Step_form__S6jGF\",\"input\":\"Step_input__+853L\",\"btn\":\"Step_btn__CeUYV\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Step.module.css';\n\n// import { setStep } from 'store/store';\n\nconst Step = () => {\n  const { step } = useSelector(state => state.counter);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.step;\n    dispatch({ type: 'setStep', payload: Number(value) });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form} role=\"search\">\n      <input\n        className={css.input}\n        type=\"number\"\n        name=\"step\"\n        placeholder=\"step\"\n        defaultValue={step}\n      />\n      <button className={css.btn} type=\"submit\">\n        Set Step\n      </button>\n    </form>\n  );\n};\n\nexport default Step;\n","// import { useReducer } from 'react';\n// import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './CounterSecond.module.css';\nimport Step from 'components/Step/Step';\nimport { increment } from 'store/action';\nimport { decrement } from 'store/action';\n\nconst CounterSecond = () => {\n  // const [total, setTotal] = useState();\n  const { total, step } = useSelector(state => state.counter);\n\n  const dispatch = useDispatch();\n\n  const handleCounterAIncrement = () => {\n    dispatch(increment(step));\n  };\n  const handleCounterBIncrement = () => {\n    dispatch(decrement(step));\n  };\n\n  return (\n    <div className={css.container}>\n      <Step />\n      <p className={css.count}>{total}</p>\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={handleCounterAIncrement}\n      >\n        Increase\n      </button>\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={handleCounterBIncrement}\n      >\n        Decrease\n      </button>\n    </div>\n  );\n};\n\n// function countReducer(state, action) {\n//   switch (action.type) {\n//     case 'increment':\n//       // return state + action.payload;\n//       return { ...state, count: state.count + action.payload };\n\n//     case 'decrement':\n//       // return state - action.payload;\n//       return { ...state, count: state.count - action.payload };\n\n//     default:\n//       throw new Error('Unsuported action type $action.type{}');\n//   }\n// }\n// function init(initialState) {\n//   // використовується наприклад для Локал Сторедж, загрузка перший раз\n//   return { ...initialState, count: initialState.count + 100 };\n// }\n\n// function CounterSecond() {\n//   // const [count, setCount] = useState(0);\n\n//   // const [count, dispatch] = useReducer(countReducer, 0 );\n//   const [state, dispatch] = useReducer(countReducer, { count: 0 }, init);\n//   // const [state, dispatch] = useReducer(reducer, 0, init);\n\n//   return (\n//     <div className={css.container}>\n//       <p className={css.count}>{state.count}</p>\n//       <button\n//         className={css.btn}\n//         type=\"button\"\n//         onClick={() => dispatch({ type: 'increment', payload: 1 })}\n//       >\n//         Increase\n//       </button>\n//       <button\n//         className={css.btn}\n//         type=\"button\"\n//         onClick={() => dispatch({ type: 'decrement', payload: 1 })}\n//       >\n//         Decrease\n//       </button>\n//     </div>\n//   );\n// }\n\nexport default CounterSecond;\n","export const increment = step => ({\n  type: 'increment',\n  payload: step,\n});\n\nexport const decrement = step => ({\n  type: 'decrement',\n  payload: step,\n});\n"],"names":["step","useSelector","state","counter","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","value","target","elements","type","payload","Number","className","css","role","children","_jsx","name","placeholder","defaultValue","_useSelector","total","Step","onClick","increment","decrement"],"sourceRoot":""}