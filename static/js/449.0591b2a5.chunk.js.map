{"version":3,"file":"static/js/449.0591b2a5.chunk.js","mappings":"0LACA,EAA4B,2BAA5B,EAA6D,qBAA7D,EAA2F,wB,SCkG3F,MA/FA,WACE,IAAAA,GAAgCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAgCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAiC5B,OAPAG,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAcP,EAAWI,EAE/BI,SAASC,MAAK,oDAAAC,OAAeH,EAAW,kCAC1C,GAAG,CAACP,EAAUI,KAGZO,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,MAAA,UACEC,UAAWC,EACXE,KAAK,SACLC,QApC0B,WAC9Bf,GAAY,SAAAgB,GAAS,OAAIA,EAAY,CAAC,GACxC,EAkCuCH,SAAA,CAClC,yDACcI,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAWC,SAAEd,IAAgB,sCAE7DW,EAAAA,EAAAA,MAAA,UACEC,UAAWC,EACXE,KAAK,SACLC,QAxC0B,WAC9BX,GAAY,SAAAc,GAAK,OAAIA,EAAQ,CAAC,GAChC,EAsCuCL,SAAA,CAClC,yDACcI,EAAAA,EAAAA,KAAA,QAAMN,UAAWC,EAAWC,SAAEV,IAAgB,uCAInE,C","sources":["webpack://react-training/./src/components/Counter/Counter.module.css?1c3c","components/Counter/Counter.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Counter_container__lKuhH\",\"btn\":\"Counter_btn__z0qgZ\",\"number\":\"Counter_number__Kh4Ek\"};","// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport css from './Counter.module.css';\n\nfunction Counter() {\n  const [counterA, setCounterA] = useState(0);\n  const [counterB, setCounterB] = useState(0);\n\n  const handleCounterAIncrement = () => {\n    setCounterA(prevState => prevState + 1);\n  };\n  const handleCounterBIncrement = () => {\n    setCounterB(state => state + 1);\n  };\n  // Реєструємо ефект, функція виконується\n  // КОЖЕН РАЗ коли оновлюється Prop або State\n  //   useEffect(() => {\n  //     console.log('Запускається useEffect');\n  //   },);\n\n  //   Якщо вкінці useEffect стоїть пустий масив [](це значить що залежностей немає)\n  // useEffect запуститься тільки при першому рендері\n  //   useEffect(() => {\n  //     console.log('Запускається useEffect');\n  //   }, []);\n\n  // //   useEffect буде запускатися лише коли змінюється counterA\n  //   useEffect(() => {\n  //     console.log(counterA+'Запускається useEffect'+Date.now());\n  //   }, [counterA]);\n\n\n  useEffect(() => {\n    // console.log('Запускається useEffect');\n    const totalClicks = counterA + counterB;\n\n    document.title = `клікнули ${totalClicks} разів`;\n  }, [counterA, counterB]);\n\n  return (\n    <div className={css.container}>\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={handleCounterAIncrement}\n      >\n        \"A\" клікнули <span className={css.number}>{counterA}</span> разів\n      </button>\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={handleCounterBIncrement}\n      >\n        \"B\" клікнули <span className={css.number}>{counterB}</span> разів\n      </button>\n    </div>\n  );\n}\n\n// class OldCounter extends Component {\n//   state = {\n//     counterA: 0,\n//     counterB: 0,\n//   };\n//   handleCounterAIncrement = () => {\n//     this.setState(({ counterA }) => ({ counterA: counterA + 1 }));\n//   };\n//   handleCounterBIncrement = () => {\n//     this.setState(({ counterB }) => ({ counterB: counterB + 1 }));\n//   };\n//   componentDidMount() {\n//     const { counterA, counterB } = this.state;\n//     const totalClicks = counterA + counterB;\n\n//     document.title = `Всього клікнули ${totalClicks} разів`;\n//   }\n//   componentDidUpdate(prevProps, prevstate) {\n//     const { counterA, counterB } = this.state;\n\n//     if (prevstate.counterA !== counterA || prevstate.counterB !== counterB) {\n//       const totalClicks = counterA + counterB;\n\n//       document.title = `Всього клікнули ${totalClicks} разів`;\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className={css.container}>\n//         <button className={css.btn} type=\"button\" onClick={this.handleCounterAIncrement}>\n//           \"A\" клікнули {this.state.counterA} разів\n//         </button>\n//         <button className={css.btn} type=\"button\" onClick={this.handleCounterBIncrement}>\n//           \"B\" клікнули {this.state.counterB} разів\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Counter;\n"],"names":["_useState","useState","_useState2","_slicedToArray","counterA","setCounterA","_useState3","_useState4","counterB","setCounterB","useEffect","totalClicks","document","title","concat","_jsxs","className","css","children","type","onClick","prevState","_jsx","state"],"sourceRoot":""}